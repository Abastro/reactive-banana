Changelog
---------

version 0.7.1.3

* bump version of dependency `vault`

version 0.7.1.0

* add `MonadIO` instance for `Moment` monad again, hence the version bump
* deprecate `liftIONow` again

version 0.7.0.0

* features dynamic event switching, add module Reactive.Banana.Switch
* rename `NetworkDescription` to `Moment`, add class constraint `Frameworks t`
* no longer compiles with the JavaScript backend of the Utrecht Haskell compiler
* change `changes` combinator to be less useful, very prone to infinite loops now

version 0.6.0.0

* can now be compiled with the JavaScript backend of the Utrecht Haskell compiler
* the push-driven implementations needs the `UseExtensions` flag to work. This flag is enabled by default.
* minor module reorganization

version 0.5.0.0
http://apfelmus.nfshost.com/blog/2012/03/25-frp-banana-0-5.html

This update includes numerous changes, in particular a complete overhaul of the internal implementation. Here a partial list.

* add `collect`, `spill` and `unionWith` combinators to deal with simultaneous events
* remove general `Monoid` instance for `Event` to simplify reasoning about simultaneous events
* add `initial` and `changes` combinators that allow you to observe updates to `Behavior`. Remove the `Reactive.Banana.Incremental` module.
* rename most modules
* change type: the main types `Event`, `Behavior` and `NetworkDescription` now carry an additional phantom type


version 0.4.3.1

* fix bug: model implementatino of `accumE`

version 0.4.3.0

* change semantics: IO actions from inside `reactimate` may now interleave as dictated by your event-based framework (issue #15)
* fix bug: compiling a network twice no longer fails due to lingering global state (issue #16)
* change type: remove `Typeable` constraint from `interpret` and `interpretAsHandler`
* misc: remove `BlackBoard` application from the repository

version 0.4.2.0

* change type: remove `Typeable` constraint from `fromAddHandler`
* misc: the `Vault` data type gets its own package
* misc: reactive-banana-wx now compiles properly with cabal
* add some more examples to reactive-banana-wx

version 0.4.1.0

* add `<@>` operator for more convenience when using `apply`
* add support for value recursion to the `NetworkDescription` monad
* add many examples to reactive-banana-wx

version 0.4.0.0
http://apfelmus.nfshost.com/blog/2011/07/07-frp-banana-0-4.html

* add function `fromPoll` to obtain behaviors from mutable data
* change name: `run` is now called `actuate`
* add derived data type `Discrete`
* add function `interpretAsHandler`


version 0.3.0.0
http://apfelmus.nfshost.com/blog/2011/06/22-frp-banana-0-3.html

* change: event networks are now first-class values, you can `pause` or `run` them.
* change type: `AddHandler` now expects a way to unregister event handlers.
* add example `RunPause.hs`


version 0.2.0.0
http://apfelmus.nfshost.com/blog/2011/06/22-frp-banana-0-2.html

* change: now implements proper semantics as pioneered by Conal Elliott
* model implementation for semantics
* push-driven implementation for efficiency

* add example `SlotMachine.hs`


version 0.1.0.0

* initial release
